---
- name : vars
  include_vars :
    dir: vars
    files_matching: default.yml

# - name: "Running command : install LAMP"
#   apt: name={{ item }}
#   loop:
#     - apache2
#     - mysql-server
#     - python3-pymysql
#     - php
#     - php-mysql
#     - libapache2-mod-php

# - name: "Running command : install PHP Extensions"
#   apt: name={{ item }}
#   loop: "{{ php_modules }}"
  
- name: "Running command : set up apache virtualhost"
  template:
    src: "files/{{ item }}"
    dest: "/etc/apache2/sites-available/{{ app_config }}"
  with_items:
    - apache.conf.j2
  notify: Reload Apache

- name: "Running command : enable new site"
  shell: /usr/sbin/a2ensite {{ app_config }}
  notify: Reload Apache

- name: "Running command : disable default apache site"
  shell: /usr/sbin/a2dissite 000-default.conf
  when: disable_default
  notify: Reload Apache

- name: "Running command : sets the root password"
  mysql_user:
    name: "{{ mysql_root_username }}"
    password: "{{ mysql_root_password }}"
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: "Running command : removes all anonymous user accounts"
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"

- name: "Running command : removes the test database"
  mysql_db:
    name: test
    state: absent
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"

- name: "Running command : creates database for WordPress"
  mysql_db:
    name: "{{ app_database }}"
    state: present
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"

- name: "Running command : create database user for WordPress"
  mysql_user:
    name: "{{ app_username }}"
    password: "{{ app_password }}"
    priv: "{{ app_database }}.*:ALL"
    state: present
    login_user: "{{ mysql_root_username }}"
    login_password: "{{ mysql_root_password }}"

- name: "Running command : check if wp-cli exists"
  stat: path="/usr/bin/wp"
  register: wpcli_exist

- name: "Running command : updating wp-cli"
  shell: "/usr/bin/wp cli update --yes"
  when: wpcli_exist.stat.exists

- name: "Running command : install wp-cli"
  get_url:
    url="https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
    dest="/usr/bin/wp"
    force_basic_auth=yes
    mode=0755
  when: not wpcli_exist.stat.exists

- name: "Running command : download and unpack latest WordPress"
  unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: "/var/www"
    remote_src: yes
    creates: "/var/www/wordpress"

- name: "Running command : rename wordpress folder"
  shell: "mv /var/www/wordpress /var/www/{{ app_domain }}"

# - name: Configure WordPress
#   # become: "{{ app_username }}"
#   command: wp core download
#             --allow-root
#             --path="/var/www/{{ app_domain }}"

- name: Configure WordPress
  command: wp core config
            --allow-root
            --path="/var/www/{{ app_domain }}"
            --dbname="{{ app_database }}"
            --dbuser="{{ app_username }}"
            --dbpass="{{ app_password }}"
            --dbprefix="{{ app_dbprefix }}"

# - name: "Running command : setup wp-config.php"
#   template:
#     src: "files/{{ item }}"
#     dest: "/var/www/{{ app_domain }}/wp-config.php"
#   with_items:
#     - wp-config.php.j2

- name: "Running command : install WordPress tables"
  command: wp core install
            --allow-root
            --path="/var/www/{{ app_domain }}"
            --url="{{ wordpress_home_url }}"
            --title="{{ wordpress_site_title }}"
            --admin_user="{{ wordpress_admin_user }}"
            --admin_password="{{ wordpress_admin_user_pass }}"
            --admin_email="{{ wordpress_admin_email }}"

- name: "Running command : set ownership"
  file:
    path: "/var/www/{{ app_domain }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data

- name: "Running command : set permissions for directories"
  shell: "/usr/bin/find /var/www/{{ app_domain }}/ -type d -exec chmod 750 {} \\;"

- name: "Running command : set permissions for files"
  shell: "/usr/bin/find /var/www/{{ app_domain }}/ -type f -exec chmod 640 {} \\;"
  notify: Reload Apache