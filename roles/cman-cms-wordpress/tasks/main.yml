---
- name: "install php modules"
  apt: name={{ item }}
  loop:
    - php-curl
    - php-gd
    - php-mbstring
    - php-xml
    - php-xmlrpc
    - php-soap
    - php-intl
    - php-zip
  tags:
    - apache
    - nginx
  
- name: "set up apache virtualhost"
  template:
    src: "files/{{ item }}"
    dest: "/etc/apache2/sites-available/{{ app_config }}"
  with_items:
    - apache.conf.j2
  notify: Reload Apache
  tags:
    - apache
    - create-app-wp-apache

- name: "set up nginx virtualhost"
  template:
    src: "files/{{ item }}"
    dest: "/etc/nginx/sites-available/{{ app_config }}"
  with_items:
    - nginx.conf.j2
  notify: Reload Nginx
  tags:
    - nginx
    - create-app-wp-nginx

- name: "enable new site"
  shell: /usr/sbin/a2ensite {{ app_config }}
  notify: Reload Apache
  tags:
    - apache
    - create-app-wp-apache

- name: "enable new site"
  file:
    src: "/etc/nginx/sites-available/{{ app_config }}"
    dest: "/etc/nginx/sites-enabled/{{ app_config }}"
    state: link
  notify: Reload Nginx
  tags:
    - nginx
    - create-app-wp-nginx

- name: "disable default apache site"
  shell: /usr/sbin/a2dissite 000-default.conf
  when: disable_default
  notify: Reload Apache
  tags:
    - apache

- name: "disable default nginx site"
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  notify: Reload Nginx
  tags:
    - nginx

- name: "download and unpack latest WordPress"
  unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: "/var/www"
    remote_src: yes
    creates: "/var/www/wordpress"
    owner: www-data
    group: www-data
    mode: "755"
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "create folder {{ app_domain }}"
  stat:
    path: "/var/www/{{ app_domain }}"
  register: wpapp
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "directory is already existed"
  debug:
    msg: "directory is already existed"
  when: wpapp.stat.exists
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "rename wordpress folder"
  shell: "mv /var/www/wordpress/* /var/www/{{ app_domain }}"
  # when: wpapp.stat.exists == false
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "configure wordpress"
  command: wp core config
            --allow-root
            --path="/var/www/{{ app_domain }}"
            --dbname="{{ app_database }}"
            --dbuser="{{ app_username }}"
            --dbpass="{{ app_password }}"
            --dbprefix="{{ app_dbprefix }}"
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "install wordpress tables"
  command: wp core install
            --allow-root
            --path="/var/www/{{ app_domain }}"
            --url="{{ wordpress_home_url }}"
            --title="{{ wordpress_site_title }}"
            --admin_user="{{ wordpress_admin_user }}"
            --admin_password="{{ wordpress_admin_user_pass }}"
            --admin_email="{{ wordpress_admin_email }}"
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "set ownership"
  file:
    path: "/var/www/{{ app_domain }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
    mode: "755"
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "set permissions for directories"
  shell: "/usr/bin/find /var/www/{{ app_domain }}/ -type d -exec chmod 755 {} \\;"
  tags:
    - apache
    - nginx
    - create-app-wp-nginx
    - create-app-wp-apache

- name: "set permissions for files"
  shell: "/usr/bin/find /var/www/{{ app_domain }}/ -type f -exec chmod 640 {} \\;"
  notify: Reload Apache
  tags:
    - apache
    - create-app-wp-apache

- name: "set permissions for files"
  shell: "/usr/bin/find /var/www/{{ app_domain }}/ -type f -exec chmod 640 {} \\;"
  notify: Reload Nginx
  tags:
  - nginx
  - create-app-wp-nginx