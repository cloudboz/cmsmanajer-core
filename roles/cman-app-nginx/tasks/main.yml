---
- name: "install nginx"
  apt: name={{ item }}
  loop:
    - nginx
  tags:
    - nginx

- name: "create folder {{ app_domain }}"
  stat:
    path: "/var/www/{{ app_domain }}"
  register: appdomain
  tags:
    - nginx
    - create-app-nginx

- name: "directory is already existed"
  debug:
    msg: "directory is already existed"
  when: appdomain.stat.exists
  tags:
    - nginx
    - create-app-nginx

- name: "create folder {{ app_domain }}"
  file:
    path: "/var/www/{{ app_domain }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  when: appdomain.stat.exists == false
  tags:
    - nginx
    - create-app-nginx

- name: "set up nginx virtualhost"
  template:
    src: "files/{{ item }}"
    dest: "/etc/nginx/sites-available/{{ app_config }}"
  with_items:
    - nginx.conf.j2
  notify: Reload Nginx
  tags:
    - nginx
    - create-app-nginx

- name: "copy index.html"
  copy: 
    src: "{{ item }}"
    dest: "/var/www/{{ app_domain }}"
  with_items:
    - index.html
  tags:
    - nginx
    - create-app-nginx

- name: "enable new site"
  file:
    src: "/etc/nginx/sites-available/{{ app_config }}"
    dest: "/etc/nginx/sites-enabled/{{ app_config }}"
    state: link
  notify: Reload Nginx
  tags:
    - nginx
    - create-app-nginx

- name: "disable default nginx site"
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  notify: Reload Nginx
  tags:
    - nginx

# Cleanup
- name: "Running command : check directory"
  stat:
    path: /var/www/{{ app_domain }}
  register: app_dir
  tags:
    - delete-app-nginx

- name: "Running command : delete directory"
  command: "rm -fr /var/www/{{ app_domain }}"
  when: app_dir.stat.exists
  tags:
    - delete-app-nginx

- name: "Running message : if directory doesn't exist"
  debug:
    msg: "directory is doesn't exist"
  when: app_dir.stat.exists == false
  tags:
    - delete-app-nginx

- name: "Running command : check directory"
  stat:
    path: /etc/nginx/sites-available/{{ app_config }}"
  register: app_nginx_available
  tags:
    - delete-app-nginx

- name: "Running command : delete site"
  command: "rm /etc/nginx/sites-available/{{ app_config }}"
  notify: Reload Nginx
  when: app_nginx_available.stat.exists
  tags:
    - delete-app-nginx

- name: "Running message : if site available doesn't exist"
  debug:
    msg: "directory is doesn't exist"
  when: app_nginx_available.stat.exists == false
  tags:
    - delete-app-nginx

- name: "Running command : check directory"
  stat:
    path: /etc/nginx/sites-enabled/{{ app_config }}
  register: app_nginx_enable
  tags:
    - delete-app-nginx

- name: "Running command : delete site"
  command: "rm /etc/nginx/sites-enabled/{{ app_config }}"
  notify: Reload Nginx
  when: app_nginx_enable.stat.exists
  tags:
    - delete-app-nginx

- name: "Running message : if site-enable doesn't exist"
  debug:
    msg: "directory is doesn't exist"
  when: app_nginx_enable.stat.exists == false
  tags:
    - delete-app-nginx

# Cleanup LEMP
- name: "Running command : uninstall LEMP"
  apt: name={{ item }} state=absent
  loop:
    - nginx
    - mysql-server
    - python3-pymysql
    - php7.4
    - php7.4-common
    - php7.4-fpm
    - php7.4-mysql
  tags:
    - delete-lemp